<h2>The Zen of Python, by Tim Peters</h2>
<ul>
  <li>Beautiful is better than ugly.</li>
  <li>Explicit is better than implicit.</li>
  <li>Simple is better than complex.</li>
  <li>Complex is better than complicated.</li>
  <li>Flat is better than nested.</li>
  <li>Sparse is better than dense.</li>
  <li>Readability counts.</li>
  <li>Special cases aren't special enough to break the rules.</li>
  <li>Although practicality beats purity.</li>
  <li>Errors should never pass silently.</li>
  <li>Unless explicitly silenced.</li>
  <li>In the face of ambiguity, refuse the temptation to guess.</li>
  <li>There should be one-- and preferably only one --obvious way to do it.</li>
  <li>Although that way may not be obvious at first unless you're Dutch.</li>
  <li>Now is better than never.</li>
  <li>Although never is often better than <em>right</em> now.</li>
  <li>If the implementation is hard to explain, it's a bad idea.</li>
  <li>If the implementation is easy to explain, it may be a good idea.</li>
  <li>Namespaces are one honking great idea -- let's do more of those!</li>
</ul>